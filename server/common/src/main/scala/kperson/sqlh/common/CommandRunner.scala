package kperson.sqlh.common

import ExecuteWrite._
import ExecuteQuery._

class CommandRunner(resolvers: List[DataSourceReferenceResolver] = List()) {

  def run(command: SQLCommand): CommandResponse = {
    command match {
      case q: Query => QueryResponse(q.run(resolvers))
      case w: Write => w.run(resolvers)
    }
  }

}


sealed trait CommandResponse
case class WriteResponse(numberOfAffectedRows: Int, autoGeneratedKeys: List[SQLPrimitive]) extends CommandResponse
case class QueryResponse(rows: List[Row]) extends CommandResponse